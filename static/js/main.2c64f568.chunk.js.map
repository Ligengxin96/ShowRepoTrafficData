{"version":3,"sources":["fetchRepoData.js","components/LineChart/LineChart.js","components/Menus/Menus.js","App.js","index.js"],"names":["fetchRepoData","repoName","axios","get","echarts","GridComponent","TooltipComponent","DataZoomComponent","LegendComponent","EchartSLineChart","CanvasRenderer","getOption","repoData","tooltip","trigger","legend","data","itemGap","grid","top","left","right","containLabel","xAxis","type","boundaryGap","date","yAxis","dataZoom","show","start","end","series","name","uniqueViews","uniqueClones","views","clones","LineChart","useState","loading","setLoading","setRepoData","useEffect","then","response","viewsData","clonesData","result","minDate","length","maxDate","moment","isSameOrBefore","push","format","value","find","item","isSame","uniques","count","add","totalViews","reduce","acc","val","totalClones","totalUniqueViews","totalUniqueClones","processData","catch","err","console","log","finally","bordered","title","Grid","style","width","hoverable","height","option","notMerge","lazyUpdate","paddingTop","paddingBottom","display","span","Menus","repos","currentMenus","setCurrentMenus","onClick","e","key","selectedKeys","theme","mode","map","repo","Item","REPOS","App","GridContent","fallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c64f568.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_PATH = 'https://www.ligengxin-server.top/getrepoinfo/v1/getrepoinfo';\n\nconst fetchRepoData = (repoName) => axios.get(`${API_PATH}/${repoName}`);\n\nexport default fetchRepoData;","/* eslint-disable no-loop-func */\nimport { useState, useEffect } from 'react';\nimport ReactEChartsCore from 'echarts-for-react/lib/core';\nimport { Card, Col } from 'antd';\nimport { LineChart as EchartSLineChart } from 'echarts/charts';\nimport * as echarts from 'echarts/core';\nimport { GridComponent, TooltipComponent, DataZoomComponent, LegendComponent } from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport moment from 'moment';\n\nimport fetchRepoData from '../../fetchRepoData';\n\necharts.use([GridComponent, TooltipComponent, DataZoomComponent, LegendComponent, EchartSLineChart, CanvasRenderer]);\n\nconst processData = ({ viewsData = [], clonesData = [] }) => {\n  const result = { views: [], uniqueViews: [], clones: [], uniqueClones: [], date: [] };\n\n  let minDate = viewsData[viewsData.length - 1].date < clonesData[clonesData.length - 1].date ? viewsData[viewsData.length - 1].date : clonesData[clonesData.length - 1].date;\n  let maxDate = viewsData[0].date > clonesData[0].date ? viewsData[0].date : clonesData[0].date;\n  minDate = moment(minDate);\n  maxDate = moment(maxDate);\n\n  while (minDate.isSameOrBefore(maxDate)) {\n    result.uniqueViews.push({\n      date: minDate.format('YYYY-MM-DD'),\n      value: viewsData.find((item) => minDate.isSame(item.date))?.uniques || 0,\n    });\n    result.views.push({\n      date: minDate.format('YYYY-MM-DD'),\n      value: viewsData.find((item) => minDate.isSame(item.date))?.count || 0,\n    });\n    result.uniqueClones.push({\n      date: minDate.format('YYYY-MM-DD'),\n      value: clonesData.find((item) => minDate.isSame(item.date))?.uniques || 0,\n    });\n    result.clones.push({\n      date: minDate.format('YYYY-MM-DD'),\n      value: clonesData.find((item) => minDate.isSame(item.date))?.count || 0,\n    });\n    result.date.push(minDate.format('YYYY-MM-DD'));\n    minDate = moment(minDate).add(1, 'days');\n  }\n\n  return { \n    ...result, \n    totalViews: result.views.reduce((acc, val) => { return { value: acc.value + val.value }}, { value: 0 }).value,\n    totalClones: result.clones.reduce((acc, val) => { return { value: acc.value + val.value }}, { value: 0 }).value,\n    totalUniqueViews: result.uniqueViews.reduce((acc, val) => { return { value: acc.value + val.value }}, { value: 0 }).value,\n    totalUniqueClones: result.uniqueClones.reduce((acc, val) => { return { value: acc.value + val.value }}, { value: 0 }).value,\n  };\n}\n\nconst getOption = (repoData) => {\n  if (!repoData) {\n    return {};\n  }\n  return {\n    tooltip: {\n      trigger: 'axis',\n    },\n    legend: {\n      data: ['Views', 'Clones', 'Unique Visitors', 'Unique Cloners'],\n      itemGap: 7\n    },\n    grid: {\n      top: '15%',\n      left: '3%',\n      right: '5%',\n      containLabel: true\n    },\n    xAxis: [\n      {\n        type: 'category',\n        boundaryGap: false,\n        data: repoData.date\n      }\n    ],\n    yAxis: [\n      {\n        type: 'value',\n      }\n    ],\n    dataZoom: [\n      {\n        type: 'slider',\n        show: true,\n        start: 0,\n        end: 100,\n      },\n      {\n        type: 'inside',\n        start: 0,\n        end: 100\n      }\n    ],\n    series: [\n      {\n        name: 'Unique Visitors',\n        type: 'line',\n        data: repoData.uniqueViews\n      },\n      {\n        name: 'Unique Cloners',\n        type: 'line',\n        data: repoData.uniqueClones\n      },\n      {\n        name: 'Views',\n        type: 'line',\n        data: repoData.views,\n      },\n      {\n        name: 'Clones',\n        type: 'line',\n        data: repoData.clones\n      }\n    ]\n  };\n}\n\nconst LineChart = ({ repoName }) => {\n\n  const [loading, setLoading] = useState(false);\n  const [repoData, setRepoData] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchRepoData(repoName)\n      .then((response) => {\n        const { data = [] } = response.data;\n        setRepoData(processData(data));\n      }).catch((err) => {\n        console.log(err);\n      }).finally(() => {\n        setLoading(false);\n      });\n  }, [repoName]);\n\n  const { totalViews, totalClones, totalUniqueViews, totalUniqueClones } = repoData || {};\n\n  return (\n    <Card bordered={false}>\n      <Card\n        bordered \n        loading={loading}\n        type=\"inner\"\n        title={<h2>{`${repoName} ${repoData?.date[0] || '-'} To ${repoData?.date[repoData.date.length - 1] || '-'} Traffic Data`}</h2>}\n      >\n        <Card.Grid style={{ width: '100%' }} hoverable={false}>\n          <ReactEChartsCore\n            style={{ height: '50vh' }}\n            echarts={echarts}\n            option={getOption(repoData)}\n            notMerge={true}\n            lazyUpdate={true}\n          />\n        </Card.Grid>\n        <Card.Grid style={{ width: '100%', paddingTop: '10px', paddingBottom: '5px' }} hoverable={false}>\n          <h4 style={{ display: 'flex' }}>\n            <Col span={2}>\n              <span>{`${totalViews || '-'} Views`}</span>\n            </Col>\n            <Col span={2}>\n              <span>{`${totalClones || '-'} Clones`}</span>\n            </Col>\n            <Col span={2}>\n              <span>{`${totalUniqueViews || '-'} Unique visitors`}</span>\n            </Col>\n            <Col span={2}>\n              <span>{`${totalUniqueClones || '-'} Unique cloners`}</span>\n            </Col>\n          </h4>\n        </Card.Grid>\n      </Card>\n    </Card>\n  );\n}\n\n\nexport default LineChart;\n","import React from \"react\";\nimport { Menu } from \"antd\";\n\nconst Menus = ({ repos = [], currentMenus, setCurrentMenus}) => {\n  \n  const handleClick = (e) => {\n    setCurrentMenus(e.key);\n  };\n\n  return (\n    <Menu onClick={handleClick} selectedKeys={currentMenus} theme=\"dark\" mode=\"horizontal\">\n      {\n        repos.map((repo) => (\n          <Menu.Item key={repo}>\n            {repo}\n          </Menu.Item>\n        ))\n      }\n    </Menu>\n  );\n}\n\nexport default Menus;","import { useState, Suspense } from 'react';\nimport { Col } from 'antd';\nimport { GridContent } from '@ant-design/pro-layout';\nimport LineChart from './components/LineChart/LineChart';\nimport Menus from './components/Menus/Menus';\n\nconst REPOS = [\n  'FetchBingDailyImage',\n  'Ours-Album',\n  'FetchRepoTrafficData',\n  'SQL-in-MongoDB'\n]\n\nconst App = () => {\n  const [currentMenus, setCurrentMenus] = useState(REPOS[0]);\n  return (\n    <>\n      <Col>\n        <Menus repos={REPOS} currentMenus={currentMenus} setCurrentMenus={setCurrentMenus} />\n      </Col>\n      <Col>\n        <GridContent>\n          <>\n            <Suspense fallback={null}>\n              <LineChart repoName={currentMenus} />\n            </Suspense>\n          </>\n        </GridContent>\n      </Col>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}